name: GRIP deploy

on:
  workflow_dispatch:
  push:
  
env:
  spn_client_id: 0e742c50-7833-42da-8580-d9509eb14bd2
  tenant_id: 93f33571-550f-43cf-b09f-cd331338d086
  subscription_id: 6bc2e318-d6fd-4cde-a71c-007eb05321c5
  rg_name: griprg
  plan_name: gripplan
  location: westeurope
  web_app_name: Grip-webapp
  #AZURE_WEBAPP_NAME: DAMS
  #AZURE_WEBAPP_PACKAGE_PATH: 'DigitalAsset'
  #DOTNET_VERSION: '6.0.401'

permissions:
  id-token: write
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: DigitalAsset

    steps:
    - uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore

    #- name: Test
    #  run: dotnet test --no-build --verbosity normal

    - name: Publish
      run: dotnet publish DigitalAsset.csproj -c Release -o website

    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3
      with:
        name: website.zip
        path: website/**
        if-no-files-found: error


  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Download a Build Artifact
      uses: actions/download-artifact@v3
      with:
        name: website.zip
        path: website

    - uses: azure/login@v1
      name: Login to Azure using OIDC
      with:
        client-id: ${{ env.spn_client_id }}
        tenant-id: ${{ env.tenant_id }}
        subscription-id: ${{ env.subscription_id }}

    - run: az group create -l ${{ env.location }} -n ${{ env.rg_name }}
      name: Deploy rg

    - run: az appservice plan create -g ${{ env.rg_name }} -n ${{ env.plan_name }} --sku F1
      name: Deploy plan

    #- run: az webapp up --sku F1 -p ${{ env.plan_name }} -n ${{ env.web_app_name }} --os-type windows -g ${{ env.rg_name }} -l ${{ env.location }}
    #  name: Deploy default web app
    #  working-directory: DigitalAsset

    - run: az webapp deployment source config-zip -g ${{ env.rg_name }} -n ${{ env.web_app_name }} --src website.zip
      name: Deploy web app


    #- name: Update config
    #  uses: Azure/appservice-settings@v1
    #  with:
    #   app-name: ${{ env.web_app_name }}
    #   slot-name: staging
    #   app-settings-json: |
    #     [
    #         {
    #             "name": "UI:Index:Header",
    #             "value": "${{ secrets.INDEX_HEADER }}",
    #             "slotSetting": true
    #         }
    #     ]
